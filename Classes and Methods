Classes
A class represents a single concept.
A Java program must have one class whose name is the same as the program filename.
In the example, the Person class must be declared in a program file named Person.java.

public class Person {
  
  public static void main(String[] args) {
    
    System.out.println("I am a person, not a computer.");
    
  }
  
}

main() Method

In Java, every application must contain a main() method, which is the entry point for the application. All other methods are invoked from the main() method.

The signature of the method is public static void main(String[] args) { }. It accepts a single argument: an array of elements of type String.
public class Person {
  
  public static void main(String[] args) {
    
    System.out.println("Hello, world!");

  }
  
}


Inside main(), print lemonadeStand to see how Java represents this instance.

Review the order of the printed messages:

    Running the program invokes main()
    We create an instance so we move from main() to Store()
    The code inside Store() runs
    When Store() finishes execution, we return to main()



public Store() {
    System.out.println("I am inside the constructor method.");

  }
  
  // main method is where we create instances!
  public static void main(String[] args) {
    System.out.println("Start of the main method.");
    Store lemonadeStand = new Store();
    System.out.println(lemonadeStand);
    
    // create the instance below
    
    // print the instance below
    
  }
}
